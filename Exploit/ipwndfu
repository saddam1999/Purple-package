#!/usr/bin/python
import usbexec
import getopt, sys
import usb.core
import usb.backend.libusb1
import dfu
import checkm8
import os
#--main--

def rmsig():
    cmd = 'python2.7 rmsigchks.py'
    ras = os.popen(cmd).read()
    print(ras)
    os.chdir("../..")
def print_help():
    print 'USAGE: ipwndfu [options]'
    print 'Interact with an iOS device in DFU Mode.\n'
    print 'Options:'
    print '  -p\t\t        USB exploit for pwned DFU Mode'
    print '  -l FILE\t\tBoot *unpacked* iBSS (32-bit devices only)'
    print '  --rm\t\t        Remove SecureROM sigchecks'
    print '  --help\t        Show this help information '
    print 'NOTE: Run brew install libusb before using ipwndfu'
if __name__ == '__main__':
    try:
        advanced = ['rm','help']
        opts, args = getopt.getopt(sys.argv[1:], 'pxf:l:', advanced)
    except getopt.GetoptError:
        print 'ERROR: Invalid arguments provided.'
        print_help()
        sys.exit(2)

    if len(opts) == 0:
        print_help()
        sys.exit(2)

    for opt, arg in opts:
        if opt == '-p':
            device = dfu.acquire_device()
            serial_number = device.serial_number
            dfu.release_device(device)
            if 'CPID:8947' in serial_number:
                checkm8.exploit()
            elif 'CPID:8950' in serial_number:
                checkm8.exploit()
            elif 'CPID:8955' in serial_number:
                checkm8.exploit()
            elif 'CPID:8960' in serial_number:
                checkm8.exploit()
            elif 'CPID:8002' in serial_number:
                checkm8.exploit()
            elif 'CPID:8004' in serial_number:
                checkm8.exploit()
            elif 'CPID:8010' in serial_number:
                checkm8.exploit()
            elif 'CPID:8011' in serial_number:
                checkm8.exploit()
            elif 'CPID:8015' in serial_number:
                checkm8.exploit()
            else:
                print 'Found:', serial_number
                print 'ERROR: This device is not supported.'
                sys.exit(1)

        if opt == '-l':
            device = usbexec.PwnedUSBDevice()
            try:
                with open(arg, 'rb') as f:
                    data = f.read()
            except IOError:
                print 'ERROR: Could not read file:', arg
                sys.exit(1)
            try:
                device.command(data, 1)
            except Exception:
                print 'Successfully sent iBSS!'
        if opt == '--rm':
            rmsig()
        if opt == '--help':
            print_help()
